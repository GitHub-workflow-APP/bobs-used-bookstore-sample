//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bookstore.Admin {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bookstore.Admin.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the details of the condition you wish to add to the database.
        /// </summary>
        public static string AddConditionsMessage {
            get {
                return ResourceManager.GetString("AddConditionsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the details of the Genre you wish to add to the database.
        /// </summary>
        public static string AddGenreMessage {
            get {
                return ResourceManager.GetString("AddGenreMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the details of the publisher you wish to add to the database.
        /// </summary>
        public static string AddPublisherMessage {
            get {
                return ResourceManager.GetString("AddPublisherMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the details of the format you wish to add to the database.
        /// </summary>
        public static string AddTypeMessage {
            get {
                return ResourceManager.GetString("AddTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, we don&apos;t currently have any relevant results for the given combination.
        /// </summary>
        public static string CombinationErrorStatus {
            get {
                return ResourceManager.GetString("CombinationErrorStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given condition already exists in the database.
        /// </summary>
        public static string ConditionExistsStatus {
            get {
                return ResourceManager.GetString("ConditionExistsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given genre already exists in the database.
        /// </summary>
        public static string GenreExistsStatus {
            get {
                return ResourceManager.GetString("GenreExistsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quantity must be a integer value.
        /// </summary>
        public static string IntegerQuantityErrorMessage {
            get {
                return ResourceManager.GetString("IntegerQuantityErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested quantity exceeds what is currently available.
        /// </summary>
        public static string MaxQuantityErrorMessage {
            get {
                return ResourceManager.GetString("MaxQuantityErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current order status is different from what was expected.
        /// </summary>
        public static string OrderStatusChangeErrorMessage {
            get {
                return ResourceManager.GetString("OrderStatusChangeErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The order status is already at the requested value.
        /// </summary>
        public static string OrderStatusNoChangeErrorMessage {
            get {
                return ResourceManager.GetString("OrderStatusNoChangeErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when trying to update the order status. Please try again.
        /// </summary>
        public static string OrderStatusUpdateErrorMessage {
            get {
                return ResourceManager.GetString("OrderStatusUpdateErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given publisher already exists in the database.
        /// </summary>
        public static string PublisherExistsStatus {
            get {
                return ResourceManager.GetString("PublisherExistsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when trying to remove item. Please try again.
        /// </summary>
        public static string RemoveFailErrorMessage {
            get {
                return ResourceManager.GetString("RemoveFailErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given format already exists in the database.
        /// </summary>
        public static string TypeExistsStatus {
            get {
                return ResourceManager.GetString("TypeExistsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated the existing records.
        /// </summary>
        public static string UpdateSuccessMessage {
            get {
                return ResourceManager.GetString("UpdateSuccessMessage", resourceCulture);
            }
        }
    }
}
